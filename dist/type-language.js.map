{"version":3,"file":"type-language.js","sources":["../node_modules/buffer/node_modules/isarray/index.js","../node_modules/ieee754/index.js","../node_modules/base64-js/lib/b64.js","../node_modules/buffer/index.js","../src/type/tl-object.js","../src/type/type-registry.js","../node_modules/jsbn/index.js","../src/serialization/common.js","../src/vector.js","../src/serialization/write-context.js","../src/serialization/read-context.js","../src/helpers.js","../src/index.js"],"sourcesContent":["var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n",";(function (exports) {\n  'use strict'\n\n  var i\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  var lookup = []\n  for (i = 0; i < code.length; i++) {\n    lookup[i] = code[i]\n  }\n  var revLookup = []\n\n  for (i = 0; i < code.length; ++i) {\n    revLookup[code.charCodeAt(i)] = i\n  }\n  revLookup['-'.charCodeAt(0)] = 62\n  revLookup['_'.charCodeAt(0)] = 63\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n  function decode (elt) {\n    var v = revLookup[elt.charCodeAt(0)]\n    return v !== undefined ? v : -1\n  }\n\n  function b64ToByteArray (b64) {\n    var i, j, l, tmp, placeHolders, arr\n\n    if (b64.length % 4 > 0) {\n      throw new Error('Invalid string. Length must be a multiple of 4')\n    }\n\n    // the number of equal signs (place holders)\n    // if there are two placeholders, than the two characters before it\n    // represent one byte\n    // if there is only one, then the three characters before it represent 2 bytes\n    // this is just a cheap hack to not do indexOf twice\n    var len = b64.length\n    placeHolders = b64.charAt(len - 2) === '=' ? 2 : b64.charAt(len - 1) === '=' ? 1 : 0\n\n    // base64 is 4/3 + up to two characters of the original data\n    arr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n    // if there are placeholders, only get up to the last complete 4 chars\n    l = placeHolders > 0 ? b64.length - 4 : b64.length\n\n    var L = 0\n\n    function push (v) {\n      arr[L++] = v\n    }\n\n    for (i = 0, j = 0; i < l; i += 4, j += 3) {\n      tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n      push((tmp & 0xFF0000) >> 16)\n      push((tmp & 0xFF00) >> 8)\n      push(tmp & 0xFF)\n    }\n\n    if (placeHolders === 2) {\n      tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n      push(tmp & 0xFF)\n    } else if (placeHolders === 1) {\n      tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n      push((tmp >> 8) & 0xFF)\n      push(tmp & 0xFF)\n    }\n\n    return arr\n  }\n\n  function encode (num) {\n    return lookup[num]\n  }\n\n  function tripletToBase64 (num) {\n    return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n  }\n\n  function encodeChunk (uint8, start, end) {\n    var temp\n    var output = []\n    for (var i = start; i < end; i += 3) {\n      temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n      output.push(tripletToBase64(temp))\n    }\n    return output.join('')\n  }\n\n  function uint8ToBase64 (uint8) {\n    var i\n    var extraBytes = uint8.length % 3 // if we have 1 byte left, pad 2 bytes\n    var output = ''\n    var parts = []\n    var temp, length\n    var maxChunkLength = 16383 // must be multiple of 3\n\n    // go through the array every three bytes, we'll deal with trailing stuff later\n\n    for (i = 0, length = uint8.length - extraBytes; i < length; i += maxChunkLength) {\n      parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > length ? length : (i + maxChunkLength)))\n    }\n\n    // pad the end with zeros, but make sure to not forget the extra bytes\n    switch (extraBytes) {\n      case 1:\n        temp = uint8[uint8.length - 1]\n        output += encode(temp >> 2)\n        output += encode((temp << 4) & 0x3F)\n        output += '=='\n        break\n      case 2:\n        temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n        output += encode(temp >> 10)\n        output += encode((temp >> 4) & 0x3F)\n        output += encode((temp << 2) & 0x3F)\n        output += '='\n        break\n      default:\n        break\n    }\n\n    parts.push(output)\n\n    return parts.join('')\n  }\n\n  exports.toByteArray = b64ToByteArray\n  exports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\nfunction Buffer (arg) {\n  if (!(this instanceof Buffer)) {\n    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.\n    if (arguments.length > 1) return new Buffer(arg, arguments[1])\n    return new Buffer(arg)\n  }\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    this.length = 0\n    this.parent = undefined\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    return fromNumber(this, arg)\n  }\n\n  // Slightly less common case.\n  if (typeof arg === 'string') {\n    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')\n  }\n\n  // Unusual.\n  return fromObject(this, arg)\n}\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction fromNumber (that, length) {\n  that = allocate(that, length < 0 ? 0 : checked(length) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < length; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'\n\n  // Assumption: byteLength() return value is always < kMaxLength.\n  var length = byteLength(string, encoding) | 0\n  that = allocate(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromObject (that, object) {\n  if (Buffer.isBuffer(object)) return fromBuffer(that, object)\n\n  if (isArray(object)) return fromArray(that, object)\n\n  if (object == null) {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined') {\n    if (object.buffer instanceof ArrayBuffer) {\n      return fromTypedArray(that, object)\n    }\n    if (object instanceof ArrayBuffer) {\n      return fromArrayBuffer(that, object)\n    }\n  }\n\n  if (object.length) return fromArrayLike(that, object)\n\n  return fromJsonObject(that, object)\n}\n\nfunction fromBuffer (that, buffer) {\n  var length = checked(buffer.length) | 0\n  that = allocate(that, length)\n  buffer.copy(that, 0, 0, length)\n  return that\n}\n\nfunction fromArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Duplicate of fromArray() to keep fromArray() monomorphic.\nfunction fromTypedArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  // Truncating the elements is probably not what people expect from typed\n  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior\n  // of the old Buffer constructor.\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(array)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromTypedArray(that, new Uint8Array(array))\n  }\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.\n// Returns a zero-length buffer for inputs that don't conform to the spec.\nfunction fromJsonObject (that, object) {\n  var array\n  var length = 0\n\n  if (object.type === 'Buffer' && isArray(object.data)) {\n    array = object.data\n    length = checked(array.length) | 0\n  }\n  that = allocate(that, length)\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n} else {\n  // pre-set for values that may exist in the future\n  Buffer.prototype.length = undefined\n  Buffer.prototype.parent = undefined\n}\n\nfunction allocate (that, length) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that.length = length\n  }\n\n  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1\n  if (fromPool) that.parent = rootParent\n\n  return that\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n  var buf = new Buffer(subject, encoding)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  var i = 0\n  var len = Math.min(x, y)\n  while (i < len) {\n    if (a[i] !== b[i]) break\n\n    ++i\n  }\n\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buf = new Buffer(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nfunction byteLength (string, encoding) {\n  if (typeof string !== 'string') string = '' + string\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  start = start | 0\n  end = end === undefined || end === Infinity ? this.length : end | 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1 // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset)\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset)\n  }\n\n  function arrayIndexOf (arr, val, byteOffset) {\n    var foundIndex = -1\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n      } else {\n        foundIndex = -1\n      }\n    }\n    return -1\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) throw new Error('Invalid hex string')\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    var swap = encoding\n    encoding = offset\n    offset = length | 0\n    length = swap\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n","import {Buffer} from 'buffer';\n\n/**\n * Base class to all TL objects\n */\nexport default class TLObject {\n\n    /**\n     * @param {Object} [data]      Object literal with properties to add on instance\n     */\n    constructor(data = null) {\n        if (data) {\n            Object.assign(this, data);\n        }\n    }\n\n    toJSON() {\n        let self = this;\n        let type = this.__id.type;\n        let result = { _: type, params: {}};\n\n        Object.keys(this).forEach(function (name) {\n            let value = self[name];\n\n            if (value === null || value === undefined) return;\n\n            if (value instanceof TLObject) {\n                value = value.toJSON();\n            }\n\n            if (Buffer.isBuffer(value)) {\n                value = '0x' + value.toString('hex');\n            }\n\n            result.params[name] = value;\n        });\n\n        return result;\n    }\n\n    toString() {\n        JSON.stringify(this.toJSON(), null, '  ');\n    }\n}\n\nTLObject.id = TLObject.prototype.__id = {\n    id: '',\n    type: '',\n    baseType: 'Object',\n    params: []\n};","import TLObject from 'type/tl-object.js';\n\nconst VectorType = /^[Vv]ector<(.+)>$/;\n\nclass TypeRegistry {\n    constructor() {\n        this._byId = {};\n        this._byType = {};\n        this.types = {};\n    }\n\n    /**\n     * @param {Function} Type               TLObject constructor\n     * @param {string} [namespace='']       Optional namespace (type prefix)\n     */\n    addType(Type, namespace) {\n        let typeMeta = Type.id;\n        let ns = (namespace ? namespace + '.' : '');\n\n        let id = ns + typeMeta.id;\n        let type = ns + typeMeta.type;\n\n        this._byId[id] = Type;\n        this._byType[type] = Type;\n\n        this.addTypeReference(Type, type);\n    }\n\n    /**\n     * @param {Function} Type\n     * @param {string} [namespace='']\n     */\n    addTypeReference(Type, namespace) {\n        let parent = this.types;\n        let typeName = namespace;\n\n        if (~namespace.indexOf('.')) {\n            let parts = typeName.split('.');\n            typeName = parts.pop();\n            parts.forEach(prefix => {\n                parent =  parent[prefix] || (parent[prefix] = {});\n            });\n        }\n\n        parent[typeName] = Type;\n    }\n\n    /**\n     * @param {Object} schema\n     * @property {Array<Object>} constructors\n     * @property {Array<Object>} methods\n     * @param {string} [namespace='']\n     */\n    importSchema(schema, namespace = '') {\n        const register = (type) => this.importType(type, namespace);\n\n        (schema.constructors||[]).forEach(register);\n        (schema.methods||[]).forEach(register);\n    }\n\n    /**\n     * @param {Object} typeDefinition\n     * @param {string} [namespace='']\n     */\n    importType(typeDefinition, namespace) {\n        this.addType(this.createType(typeDefinition), namespace);\n    }\n\n    createType(typeDefinition) {\n        let type = typeDefinition.method || typeDefinition.predicate;\n        let baseType = typeDefinition.type;\n        let params = typeDefinition.params;\n\n        let id = typeDefinition.id;\n        let typeHash = new Buffer(4);\n        typeHash.writeInt32LE(id, 0);\n        id = typeHash.toString('hex');\n\n        this._normalizeParams(params);\n\n        let typeMetadata = { id, type, baseType, params };\n\n        class Type extends TLObject {}\n\n        Type.id = Type.prototype.__id = typeMetadata;\n        Type.params = typeDefinition.params;\n\n        return Type;\n    }\n\n    getByType(type) {\n        return this._byType[type];\n    }\n\n    getById(id) {\n        return this._byId[id];\n    }\n\n    _normalizeParams(params) {\n        params.forEach(param => {\n            let type = param.type;\n            if (!VectorType.test(type)) return;\n\n            let match = type.match(VectorType);\n            type = match[1];\n\n            param.type = type;\n            param.isVector = true;\n            param.isBare = type.charAt(0) === '%';\n        });\n    }\n}\n\nlet registry = new TypeRegistry();\n\nexport default registry;\n","(function(){\n\n    // Copyright (c) 2005  Tom Wu\n    // All Rights Reserved.\n    // See \"LICENSE\" for details.\n\n    // Basic JavaScript BN library - subset useful for RSA encryption.\n\n    // Bits per digit\n    var dbits;\n\n    // JavaScript engine analysis\n    var canary = 0xdeadbeefcafe;\n    var j_lm = ((canary&0xffffff)==0xefcafe);\n\n    // (public) Constructor\n    function BigInteger(a,b,c) {\n      if(a != null)\n        if(\"number\" == typeof a) this.fromNumber(a,b,c);\n        else if(b == null && \"string\" != typeof a) this.fromString(a,256);\n        else this.fromString(a,b);\n    }\n\n    // return new, unset BigInteger\n    function nbi() { return new BigInteger(null); }\n\n    // am: Compute w_j += (x*this_i), propagate carries,\n    // c is initial carry, returns final carry.\n    // c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n    // We need to select the fastest one that works in this environment.\n\n    // am1: use a single mult and divide to get the high bits,\n    // max digit bits should be 26 because\n    // max internal value = 2*dvalue^2-2*dvalue (< 2^53)\n    function am1(i,x,w,j,c,n) {\n      while(--n >= 0) {\n        var v = x*this[i++]+w[j]+c;\n        c = Math.floor(v/0x4000000);\n        w[j++] = v&0x3ffffff;\n      }\n      return c;\n    }\n    // am2 avoids a big mult-and-extract completely.\n    // Max digit bits should be <= 30 because we do bitwise ops\n    // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\n    function am2(i,x,w,j,c,n) {\n      var xl = x&0x7fff, xh = x>>15;\n      while(--n >= 0) {\n        var l = this[i]&0x7fff;\n        var h = this[i++]>>15;\n        var m = xh*l+h*xl;\n        l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);\n        c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n        w[j++] = l&0x3fffffff;\n      }\n      return c;\n    }\n    // Alternately, set max digit bits to 28 since some\n    // browsers slow down when dealing with 32-bit numbers.\n    function am3(i,x,w,j,c,n) {\n      var xl = x&0x3fff, xh = x>>14;\n      while(--n >= 0) {\n        var l = this[i]&0x3fff;\n        var h = this[i++]>>14;\n        var m = xh*l+h*xl;\n        l = xl*l+((m&0x3fff)<<14)+w[j]+c;\n        c = (l>>28)+(m>>14)+xh*h;\n        w[j++] = l&0xfffffff;\n      }\n      return c;\n    }\n    var inBrowser = typeof navigator !== \"undefined\";\n    if(inBrowser && j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n      BigInteger.prototype.am = am2;\n      dbits = 30;\n    }\n    else if(inBrowser && j_lm && (navigator.appName != \"Netscape\")) {\n      BigInteger.prototype.am = am1;\n      dbits = 26;\n    }\n    else { // Mozilla/Netscape seems to prefer am3\n      BigInteger.prototype.am = am3;\n      dbits = 28;\n    }\n\n    BigInteger.prototype.DB = dbits;\n    BigInteger.prototype.DM = ((1<<dbits)-1);\n    BigInteger.prototype.DV = (1<<dbits);\n\n    var BI_FP = 52;\n    BigInteger.prototype.FV = Math.pow(2,BI_FP);\n    BigInteger.prototype.F1 = BI_FP-dbits;\n    BigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n    // Digit conversions\n    var BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\n    var BI_RC = new Array();\n    var rr,vv;\n    rr = \"0\".charCodeAt(0);\n    for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\n    rr = \"a\".charCodeAt(0);\n    for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n    rr = \"A\".charCodeAt(0);\n    for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\n    function int2char(n) { return BI_RM.charAt(n); }\n    function intAt(s,i) {\n      var c = BI_RC[s.charCodeAt(i)];\n      return (c==null)?-1:c;\n    }\n\n    // (protected) copy this to r\n    function bnpCopyTo(r) {\n      for(var i = this.t-1; i >= 0; --i) r[i] = this[i];\n      r.t = this.t;\n      r.s = this.s;\n    }\n\n    // (protected) set from integer value x, -DV <= x < DV\n    function bnpFromInt(x) {\n      this.t = 1;\n      this.s = (x<0)?-1:0;\n      if(x > 0) this[0] = x;\n      else if(x < -1) this[0] = x+this.DV;\n      else this.t = 0;\n    }\n\n    // return bigint initialized to value\n    function nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n    // (protected) set from string and radix\n    function bnpFromString(s,b) {\n      var k;\n      if(b == 16) k = 4;\n      else if(b == 8) k = 3;\n      else if(b == 256) k = 8; // byte array\n      else if(b == 2) k = 1;\n      else if(b == 32) k = 5;\n      else if(b == 4) k = 2;\n      else { this.fromRadix(s,b); return; }\n      this.t = 0;\n      this.s = 0;\n      var i = s.length, mi = false, sh = 0;\n      while(--i >= 0) {\n        var x = (k==8)?s[i]&0xff:intAt(s,i);\n        if(x < 0) {\n          if(s.charAt(i) == \"-\") mi = true;\n          continue;\n        }\n        mi = false;\n        if(sh == 0)\n          this[this.t++] = x;\n        else if(sh+k > this.DB) {\n          this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n          this[this.t++] = (x>>(this.DB-sh));\n        }\n        else\n          this[this.t-1] |= x<<sh;\n        sh += k;\n        if(sh >= this.DB) sh -= this.DB;\n      }\n      if(k == 8 && (s[0]&0x80) != 0) {\n        this.s = -1;\n        if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n      }\n      this.clamp();\n      if(mi) BigInteger.ZERO.subTo(this,this);\n    }\n\n    // (protected) clamp off excess high words\n    function bnpClamp() {\n      var c = this.s&this.DM;\n      while(this.t > 0 && this[this.t-1] == c) --this.t;\n    }\n\n    // (public) return string representation in given radix\n    function bnToString(b) {\n      if(this.s < 0) return \"-\"+this.negate().toString(b);\n      var k;\n      if(b == 16) k = 4;\n      else if(b == 8) k = 3;\n      else if(b == 2) k = 1;\n      else if(b == 32) k = 5;\n      else if(b == 4) k = 2;\n      else return this.toRadix(b);\n      var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n      var p = this.DB-(i*this.DB)%k;\n      if(i-- > 0) {\n        if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }\n        while(i >= 0) {\n          if(p < k) {\n            d = (this[i]&((1<<p)-1))<<(k-p);\n            d |= this[--i]>>(p+=this.DB-k);\n          }\n          else {\n            d = (this[i]>>(p-=k))&km;\n            if(p <= 0) { p += this.DB; --i; }\n          }\n          if(d > 0) m = true;\n          if(m) r += int2char(d);\n        }\n      }\n      return m?r:\"0\";\n    }\n\n    // (public) -this\n    function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n    // (public) |this|\n    function bnAbs() { return (this.s<0)?this.negate():this; }\n\n    // (public) return + if this > a, - if this < a, 0 if equal\n    function bnCompareTo(a) {\n      var r = this.s-a.s;\n      if(r != 0) return r;\n      var i = this.t;\n      r = i-a.t;\n      if(r != 0) return (this.s<0)?-r:r;\n      while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;\n      return 0;\n    }\n\n    // returns bit length of the integer x\n    function nbits(x) {\n      var r = 1, t;\n      if((t=x>>>16) != 0) { x = t; r += 16; }\n      if((t=x>>8) != 0) { x = t; r += 8; }\n      if((t=x>>4) != 0) { x = t; r += 4; }\n      if((t=x>>2) != 0) { x = t; r += 2; }\n      if((t=x>>1) != 0) { x = t; r += 1; }\n      return r;\n    }\n\n    // (public) return the number of bits in \"this\"\n    function bnBitLength() {\n      if(this.t <= 0) return 0;\n      return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));\n    }\n\n    // (protected) r = this << n*DB\n    function bnpDLShiftTo(n,r) {\n      var i;\n      for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];\n      for(i = n-1; i >= 0; --i) r[i] = 0;\n      r.t = this.t+n;\n      r.s = this.s;\n    }\n\n    // (protected) r = this >> n*DB\n    function bnpDRShiftTo(n,r) {\n      for(var i = n; i < this.t; ++i) r[i-n] = this[i];\n      r.t = Math.max(this.t-n,0);\n      r.s = this.s;\n    }\n\n    // (protected) r = this << n\n    function bnpLShiftTo(n,r) {\n      var bs = n%this.DB;\n      var cbs = this.DB-bs;\n      var bm = (1<<cbs)-1;\n      var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n      for(i = this.t-1; i >= 0; --i) {\n        r[i+ds+1] = (this[i]>>cbs)|c;\n        c = (this[i]&bm)<<bs;\n      }\n      for(i = ds-1; i >= 0; --i) r[i] = 0;\n      r[ds] = c;\n      r.t = this.t+ds+1;\n      r.s = this.s;\n      r.clamp();\n    }\n\n    // (protected) r = this >> n\n    function bnpRShiftTo(n,r) {\n      r.s = this.s;\n      var ds = Math.floor(n/this.DB);\n      if(ds >= this.t) { r.t = 0; return; }\n      var bs = n%this.DB;\n      var cbs = this.DB-bs;\n      var bm = (1<<bs)-1;\n      r[0] = this[ds]>>bs;\n      for(var i = ds+1; i < this.t; ++i) {\n        r[i-ds-1] |= (this[i]&bm)<<cbs;\n        r[i-ds] = this[i]>>bs;\n      }\n      if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;\n      r.t = this.t-ds;\n      r.clamp();\n    }\n\n    // (protected) r = this - a\n    function bnpSubTo(a,r) {\n      var i = 0, c = 0, m = Math.min(a.t,this.t);\n      while(i < m) {\n        c += this[i]-a[i];\n        r[i++] = c&this.DM;\n        c >>= this.DB;\n      }\n      if(a.t < this.t) {\n        c -= a.s;\n        while(i < this.t) {\n          c += this[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c += this.s;\n      }\n      else {\n        c += this.s;\n        while(i < a.t) {\n          c -= a[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c -= a.s;\n      }\n      r.s = (c<0)?-1:0;\n      if(c < -1) r[i++] = this.DV+c;\n      else if(c > 0) r[i++] = c;\n      r.t = i;\n      r.clamp();\n    }\n\n    // (protected) r = this * a, r != this,a (HAC 14.12)\n    // \"this\" should be the larger one if appropriate.\n    function bnpMultiplyTo(a,r) {\n      var x = this.abs(), y = a.abs();\n      var i = x.t;\n      r.t = i+y.t;\n      while(--i >= 0) r[i] = 0;\n      for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);\n      r.s = 0;\n      r.clamp();\n      if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n    }\n\n    // (protected) r = this^2, r != this (HAC 14.16)\n    function bnpSquareTo(r) {\n      var x = this.abs();\n      var i = r.t = 2*x.t;\n      while(--i >= 0) r[i] = 0;\n      for(i = 0; i < x.t-1; ++i) {\n        var c = x.am(i,x[i],r,2*i,0,1);\n        if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n          r[i+x.t] -= x.DV;\n          r[i+x.t+1] = 1;\n        }\n      }\n      if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);\n      r.s = 0;\n      r.clamp();\n    }\n\n    // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n    // r != q, this != m.  q or r may be null.\n    function bnpDivRemTo(m,q,r) {\n      var pm = m.abs();\n      if(pm.t <= 0) return;\n      var pt = this.abs();\n      if(pt.t < pm.t) {\n        if(q != null) q.fromInt(0);\n        if(r != null) this.copyTo(r);\n        return;\n      }\n      if(r == null) r = nbi();\n      var y = nbi(), ts = this.s, ms = m.s;\n      var nsh = this.DB-nbits(pm[pm.t-1]);   // normalize modulus\n      if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }\n      else { pm.copyTo(y); pt.copyTo(r); }\n      var ys = y.t;\n      var y0 = y[ys-1];\n      if(y0 == 0) return;\n      var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);\n      var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n      var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n      y.dlShiftTo(j,t);\n      if(r.compareTo(t) >= 0) {\n        r[r.t++] = 1;\n        r.subTo(t,r);\n      }\n      BigInteger.ONE.dlShiftTo(ys,t);\n      t.subTo(y,y);  // \"negative\" y so we can replace sub with am later\n      while(y.t < ys) y[y.t++] = 0;\n      while(--j >= 0) {\n        // Estimate quotient digit\n        var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);\n        if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {   // Try it out\n          y.dlShiftTo(j,t);\n          r.subTo(t,r);\n          while(r[i] < --qd) r.subTo(t,r);\n        }\n      }\n      if(q != null) {\n        r.drShiftTo(ys,q);\n        if(ts != ms) BigInteger.ZERO.subTo(q,q);\n      }\n      r.t = ys;\n      r.clamp();\n      if(nsh > 0) r.rShiftTo(nsh,r); // Denormalize remainder\n      if(ts < 0) BigInteger.ZERO.subTo(r,r);\n    }\n\n    // (public) this mod a\n    function bnMod(a) {\n      var r = nbi();\n      this.abs().divRemTo(a,null,r);\n      if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n      return r;\n    }\n\n    // Modular reduction using \"classic\" algorithm\n    function Classic(m) { this.m = m; }\n    function cConvert(x) {\n      if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n      else return x;\n    }\n    function cRevert(x) { return x; }\n    function cReduce(x) { x.divRemTo(this.m,null,x); }\n    function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n    function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n    Classic.prototype.convert = cConvert;\n    Classic.prototype.revert = cRevert;\n    Classic.prototype.reduce = cReduce;\n    Classic.prototype.mulTo = cMulTo;\n    Classic.prototype.sqrTo = cSqrTo;\n\n    // (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n    // justification:\n    //         xy == 1 (mod m)\n    //         xy =  1+km\n    //   xy(2-xy) = (1+km)(1-km)\n    // x[y(2-xy)] = 1-k^2m^2\n    // x[y(2-xy)] == 1 (mod m^2)\n    // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n    // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n    // JS multiply \"overflows\" differently from C/C++, so care is needed here.\n    function bnpInvDigit() {\n      if(this.t < 1) return 0;\n      var x = this[0];\n      if((x&1) == 0) return 0;\n      var y = x&3;       // y == 1/x mod 2^2\n      y = (y*(2-(x&0xf)*y))&0xf; // y == 1/x mod 2^4\n      y = (y*(2-(x&0xff)*y))&0xff;   // y == 1/x mod 2^8\n      y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;    // y == 1/x mod 2^16\n      // last step - calculate inverse mod DV directly;\n      // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n      y = (y*(2-x*y%this.DV))%this.DV;       // y == 1/x mod 2^dbits\n      // we really want the negative inverse, and -DV < y < DV\n      return (y>0)?this.DV-y:-y;\n    }\n\n    // Montgomery reduction\n    function Montgomery(m) {\n      this.m = m;\n      this.mp = m.invDigit();\n      this.mpl = this.mp&0x7fff;\n      this.mph = this.mp>>15;\n      this.um = (1<<(m.DB-15))-1;\n      this.mt2 = 2*m.t;\n    }\n\n    // xR mod m\n    function montConvert(x) {\n      var r = nbi();\n      x.abs().dlShiftTo(this.m.t,r);\n      r.divRemTo(this.m,null,r);\n      if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n      return r;\n    }\n\n    // x/R mod m\n    function montRevert(x) {\n      var r = nbi();\n      x.copyTo(r);\n      this.reduce(r);\n      return r;\n    }\n\n    // x = x/R mod m (HAC 14.32)\n    function montReduce(x) {\n      while(x.t <= this.mt2) // pad x so am has enough room later\n        x[x.t++] = 0;\n      for(var i = 0; i < this.m.t; ++i) {\n        // faster way of calculating u0 = x[i]*mp mod DV\n        var j = x[i]&0x7fff;\n        var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n        // use am to combine the multiply-shift-add into one call\n        j = i+this.m.t;\n        x[j] += this.m.am(0,u0,x,i,0,this.m.t);\n        // propagate carry\n        while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }\n      }\n      x.clamp();\n      x.drShiftTo(this.m.t,x);\n      if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n    }\n\n    // r = \"x^2/R mod m\"; x != r\n    function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n    // r = \"xy/R mod m\"; x,y != r\n    function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\n    Montgomery.prototype.convert = montConvert;\n    Montgomery.prototype.revert = montRevert;\n    Montgomery.prototype.reduce = montReduce;\n    Montgomery.prototype.mulTo = montMulTo;\n    Montgomery.prototype.sqrTo = montSqrTo;\n\n    // (protected) true iff this is even\n    function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }\n\n    // (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\n    function bnpExp(e,z) {\n      if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n      var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n      g.copyTo(r);\n      while(--i >= 0) {\n        z.sqrTo(r,r2);\n        if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n        else { var t = r; r = r2; r2 = t; }\n      }\n      return z.revert(r);\n    }\n\n    // (public) this^e % m, 0 <= e < 2^32\n    function bnModPowInt(e,m) {\n      var z;\n      if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n      return this.exp(e,z);\n    }\n\n    // protected\n    BigInteger.prototype.copyTo = bnpCopyTo;\n    BigInteger.prototype.fromInt = bnpFromInt;\n    BigInteger.prototype.fromString = bnpFromString;\n    BigInteger.prototype.clamp = bnpClamp;\n    BigInteger.prototype.dlShiftTo = bnpDLShiftTo;\n    BigInteger.prototype.drShiftTo = bnpDRShiftTo;\n    BigInteger.prototype.lShiftTo = bnpLShiftTo;\n    BigInteger.prototype.rShiftTo = bnpRShiftTo;\n    BigInteger.prototype.subTo = bnpSubTo;\n    BigInteger.prototype.multiplyTo = bnpMultiplyTo;\n    BigInteger.prototype.squareTo = bnpSquareTo;\n    BigInteger.prototype.divRemTo = bnpDivRemTo;\n    BigInteger.prototype.invDigit = bnpInvDigit;\n    BigInteger.prototype.isEven = bnpIsEven;\n    BigInteger.prototype.exp = bnpExp;\n\n    // public\n    BigInteger.prototype.toString = bnToString;\n    BigInteger.prototype.negate = bnNegate;\n    BigInteger.prototype.abs = bnAbs;\n    BigInteger.prototype.compareTo = bnCompareTo;\n    BigInteger.prototype.bitLength = bnBitLength;\n    BigInteger.prototype.mod = bnMod;\n    BigInteger.prototype.modPowInt = bnModPowInt;\n\n    // \"constants\"\n    BigInteger.ZERO = nbv(0);\n    BigInteger.ONE = nbv(1);\n\n    // Copyright (c) 2005-2009  Tom Wu\n    // All Rights Reserved.\n    // See \"LICENSE\" for details.\n\n    // Extended JavaScript BN functions, required for RSA private ops.\n\n    // Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n    // Version 1.2: square() API, isProbablePrime fix\n\n    // (public)\n    function bnClone() { var r = nbi(); this.copyTo(r); return r; }\n\n    // (public) return value as integer\n    function bnIntValue() {\n      if(this.s < 0) {\n        if(this.t == 1) return this[0]-this.DV;\n        else if(this.t == 0) return -1;\n      }\n      else if(this.t == 1) return this[0];\n      else if(this.t == 0) return 0;\n      // assumes 16 < DB < 32\n      return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];\n    }\n\n    // (public) return value as byte\n    function bnByteValue() { return (this.t==0)?this.s:(this[0]<<24)>>24; }\n\n    // (public) return value as short (assumes DB>=16)\n    function bnShortValue() { return (this.t==0)?this.s:(this[0]<<16)>>16; }\n\n    // (protected) return x s.t. r^x < DV\n    function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\n\n    // (public) 0 if this == 0, 1 if this > 0\n    function bnSigNum() {\n      if(this.s < 0) return -1;\n      else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;\n      else return 1;\n    }\n\n    // (protected) convert to radix string\n    function bnpToRadix(b) {\n      if(b == null) b = 10;\n      if(this.signum() == 0 || b < 2 || b > 36) return \"0\";\n      var cs = this.chunkSize(b);\n      var a = Math.pow(b,cs);\n      var d = nbv(a), y = nbi(), z = nbi(), r = \"\";\n      this.divRemTo(d,y,z);\n      while(y.signum() > 0) {\n        r = (a+z.intValue()).toString(b).substr(1) + r;\n        y.divRemTo(d,y,z);\n      }\n      return z.intValue().toString(b) + r;\n    }\n\n    // (protected) convert from radix string\n    function bnpFromRadix(s,b) {\n      this.fromInt(0);\n      if(b == null) b = 10;\n      var cs = this.chunkSize(b);\n      var d = Math.pow(b,cs), mi = false, j = 0, w = 0;\n      for(var i = 0; i < s.length; ++i) {\n        var x = intAt(s,i);\n        if(x < 0) {\n          if(s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n          continue;\n        }\n        w = b*w+x;\n        if(++j >= cs) {\n          this.dMultiply(d);\n          this.dAddOffset(w,0);\n          j = 0;\n          w = 0;\n        }\n      }\n      if(j > 0) {\n        this.dMultiply(Math.pow(b,j));\n        this.dAddOffset(w,0);\n      }\n      if(mi) BigInteger.ZERO.subTo(this,this);\n    }\n\n    // (protected) alternate constructor\n    function bnpFromNumber(a,b,c) {\n      if(\"number\" == typeof b) {\n        // new BigInteger(int,int,RNG)\n        if(a < 2) this.fromInt(1);\n        else {\n          this.fromNumber(a,c);\n          if(!this.testBit(a-1))\t// force MSB set\n            this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\n          if(this.isEven()) this.dAddOffset(1,0); // force odd\n          while(!this.isProbablePrime(b)) {\n            this.dAddOffset(2,0);\n            if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\n          }\n        }\n      }\n      else {\n        // new BigInteger(int,RNG)\n        var x = new Array(), t = a&7;\n        x.length = (a>>3)+1;\n        b.nextBytes(x);\n        if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\n        this.fromString(x,256);\n      }\n    }\n\n    // (public) convert to bigendian byte array\n    function bnToByteArray() {\n      var i = this.t, r = new Array();\n      r[0] = this.s;\n      var p = this.DB-(i*this.DB)%8, d, k = 0;\n      if(i-- > 0) {\n        if(p < this.DB && (d = this[i]>>p) != (this.s&this.DM)>>p)\n          r[k++] = d|(this.s<<(this.DB-p));\n        while(i >= 0) {\n          if(p < 8) {\n            d = (this[i]&((1<<p)-1))<<(8-p);\n            d |= this[--i]>>(p+=this.DB-8);\n          }\n          else {\n            d = (this[i]>>(p-=8))&0xff;\n            if(p <= 0) { p += this.DB; --i; }\n          }\n          if((d&0x80) != 0) d |= -256;\n          if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\n          if(k > 0 || d != this.s) r[k++] = d;\n        }\n      }\n      return r;\n    }\n\n    function bnEquals(a) { return(this.compareTo(a)==0); }\n    function bnMin(a) { return(this.compareTo(a)<0)?this:a; }\n    function bnMax(a) { return(this.compareTo(a)>0)?this:a; }\n\n    // (protected) r = this op a (bitwise)\n    function bnpBitwiseTo(a,op,r) {\n      var i, f, m = Math.min(a.t,this.t);\n      for(i = 0; i < m; ++i) r[i] = op(this[i],a[i]);\n      if(a.t < this.t) {\n        f = a.s&this.DM;\n        for(i = m; i < this.t; ++i) r[i] = op(this[i],f);\n        r.t = this.t;\n      }\n      else {\n        f = this.s&this.DM;\n        for(i = m; i < a.t; ++i) r[i] = op(f,a[i]);\n        r.t = a.t;\n      }\n      r.s = op(this.s,a.s);\n      r.clamp();\n    }\n\n    // (public) this & a\n    function op_and(x,y) { return x&y; }\n    function bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\n\n    // (public) this | a\n    function op_or(x,y) { return x|y; }\n    function bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\n\n    // (public) this ^ a\n    function op_xor(x,y) { return x^y; }\n    function bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\n\n    // (public) this & ~a\n    function op_andnot(x,y) { return x&~y; }\n    function bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\n\n    // (public) ~this\n    function bnNot() {\n      var r = nbi();\n      for(var i = 0; i < this.t; ++i) r[i] = this.DM&~this[i];\n      r.t = this.t;\n      r.s = ~this.s;\n      return r;\n    }\n\n    // (public) this << n\n    function bnShiftLeft(n) {\n      var r = nbi();\n      if(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\n      return r;\n    }\n\n    // (public) this >> n\n    function bnShiftRight(n) {\n      var r = nbi();\n      if(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\n      return r;\n    }\n\n    // return index of lowest 1-bit in x, x < 2^31\n    function lbit(x) {\n      if(x == 0) return -1;\n      var r = 0;\n      if((x&0xffff) == 0) { x >>= 16; r += 16; }\n      if((x&0xff) == 0) { x >>= 8; r += 8; }\n      if((x&0xf) == 0) { x >>= 4; r += 4; }\n      if((x&3) == 0) { x >>= 2; r += 2; }\n      if((x&1) == 0) ++r;\n      return r;\n    }\n\n    // (public) returns index of lowest 1-bit (or -1 if none)\n    function bnGetLowestSetBit() {\n      for(var i = 0; i < this.t; ++i)\n        if(this[i] != 0) return i*this.DB+lbit(this[i]);\n      if(this.s < 0) return this.t*this.DB;\n      return -1;\n    }\n\n    // return number of 1 bits in x\n    function cbit(x) {\n      var r = 0;\n      while(x != 0) { x &= x-1; ++r; }\n      return r;\n    }\n\n    // (public) return number of set bits\n    function bnBitCount() {\n      var r = 0, x = this.s&this.DM;\n      for(var i = 0; i < this.t; ++i) r += cbit(this[i]^x);\n      return r;\n    }\n\n    // (public) true iff nth bit is set\n    function bnTestBit(n) {\n      var j = Math.floor(n/this.DB);\n      if(j >= this.t) return(this.s!=0);\n      return((this[j]&(1<<(n%this.DB)))!=0);\n    }\n\n    // (protected) this op (1<<n)\n    function bnpChangeBit(n,op) {\n      var r = BigInteger.ONE.shiftLeft(n);\n      this.bitwiseTo(r,op,r);\n      return r;\n    }\n\n    // (public) this | (1<<n)\n    function bnSetBit(n) { return this.changeBit(n,op_or); }\n\n    // (public) this & ~(1<<n)\n    function bnClearBit(n) { return this.changeBit(n,op_andnot); }\n\n    // (public) this ^ (1<<n)\n    function bnFlipBit(n) { return this.changeBit(n,op_xor); }\n\n    // (protected) r = this + a\n    function bnpAddTo(a,r) {\n      var i = 0, c = 0, m = Math.min(a.t,this.t);\n      while(i < m) {\n        c += this[i]+a[i];\n        r[i++] = c&this.DM;\n        c >>= this.DB;\n      }\n      if(a.t < this.t) {\n        c += a.s;\n        while(i < this.t) {\n          c += this[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c += this.s;\n      }\n      else {\n        c += this.s;\n        while(i < a.t) {\n          c += a[i];\n          r[i++] = c&this.DM;\n          c >>= this.DB;\n        }\n        c += a.s;\n      }\n      r.s = (c<0)?-1:0;\n      if(c > 0) r[i++] = c;\n      else if(c < -1) r[i++] = this.DV+c;\n      r.t = i;\n      r.clamp();\n    }\n\n    // (public) this + a\n    function bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\n\n    // (public) this - a\n    function bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\n\n    // (public) this * a\n    function bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\n\n    // (public) this^2\n    function bnSquare() { var r = nbi(); this.squareTo(r); return r; }\n\n    // (public) this / a\n    function bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\n\n    // (public) this % a\n    function bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\n\n    // (public) [this/a,this%a]\n    function bnDivideAndRemainder(a) {\n      var q = nbi(), r = nbi();\n      this.divRemTo(a,q,r);\n      return new Array(q,r);\n    }\n\n    // (protected) this *= n, this >= 0, 1 < n < DV\n    function bnpDMultiply(n) {\n      this[this.t] = this.am(0,n-1,this,0,0,this.t);\n      ++this.t;\n      this.clamp();\n    }\n\n    // (protected) this += n << w words, this >= 0\n    function bnpDAddOffset(n,w) {\n      if(n == 0) return;\n      while(this.t <= w) this[this.t++] = 0;\n      this[w] += n;\n      while(this[w] >= this.DV) {\n        this[w] -= this.DV;\n        if(++w >= this.t) this[this.t++] = 0;\n        ++this[w];\n      }\n    }\n\n    // A \"null\" reducer\n    function NullExp() {}\n    function nNop(x) { return x; }\n    function nMulTo(x,y,r) { x.multiplyTo(y,r); }\n    function nSqrTo(x,r) { x.squareTo(r); }\n\n    NullExp.prototype.convert = nNop;\n    NullExp.prototype.revert = nNop;\n    NullExp.prototype.mulTo = nMulTo;\n    NullExp.prototype.sqrTo = nSqrTo;\n\n    // (public) this^e\n    function bnPow(e) { return this.exp(e,new NullExp()); }\n\n    // (protected) r = lower n words of \"this * a\", a.t <= n\n    // \"this\" should be the larger one if appropriate.\n    function bnpMultiplyLowerTo(a,n,r) {\n      var i = Math.min(this.t+a.t,n);\n      r.s = 0; // assumes a,this >= 0\n      r.t = i;\n      while(i > 0) r[--i] = 0;\n      var j;\n      for(j = r.t-this.t; i < j; ++i) r[i+this.t] = this.am(0,a[i],r,i,0,this.t);\n      for(j = Math.min(a.t,n); i < j; ++i) this.am(0,a[i],r,i,0,n-i);\n      r.clamp();\n    }\n\n    // (protected) r = \"this * a\" without lower n words, n > 0\n    // \"this\" should be the larger one if appropriate.\n    function bnpMultiplyUpperTo(a,n,r) {\n      --n;\n      var i = r.t = this.t+a.t-n;\n      r.s = 0; // assumes a,this >= 0\n      while(--i >= 0) r[i] = 0;\n      for(i = Math.max(n-this.t,0); i < a.t; ++i)\n        r[this.t+i-n] = this.am(n-i,a[i],r,0,0,this.t+i-n);\n      r.clamp();\n      r.drShiftTo(1,r);\n    }\n\n    // Barrett modular reduction\n    function Barrett(m) {\n      // setup Barrett\n      this.r2 = nbi();\n      this.q3 = nbi();\n      BigInteger.ONE.dlShiftTo(2*m.t,this.r2);\n      this.mu = this.r2.divide(m);\n      this.m = m;\n    }\n\n    function barrettConvert(x) {\n      if(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\n      else if(x.compareTo(this.m) < 0) return x;\n      else { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n    }\n\n    function barrettRevert(x) { return x; }\n\n    // x = x mod m (HAC 14.42)\n    function barrettReduce(x) {\n      x.drShiftTo(this.m.t-1,this.r2);\n      if(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\n      this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\n      this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\n      while(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\n      x.subTo(this.r2,x);\n      while(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n    }\n\n    // r = x^2 mod m; x != r\n    function barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n    // r = x*y mod m; x,y != r\n    function barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\n    Barrett.prototype.convert = barrettConvert;\n    Barrett.prototype.revert = barrettRevert;\n    Barrett.prototype.reduce = barrettReduce;\n    Barrett.prototype.mulTo = barrettMulTo;\n    Barrett.prototype.sqrTo = barrettSqrTo;\n\n    // (public) this^e % m (HAC 14.85)\n    function bnModPow(e,m) {\n      var i = e.bitLength(), k, r = nbv(1), z;\n      if(i <= 0) return r;\n      else if(i < 18) k = 1;\n      else if(i < 48) k = 3;\n      else if(i < 144) k = 4;\n      else if(i < 768) k = 5;\n      else k = 6;\n      if(i < 8)\n        z = new Classic(m);\n      else if(m.isEven())\n        z = new Barrett(m);\n      else\n        z = new Montgomery(m);\n\n      // precomputation\n      var g = new Array(), n = 3, k1 = k-1, km = (1<<k)-1;\n      g[1] = z.convert(this);\n      if(k > 1) {\n        var g2 = nbi();\n        z.sqrTo(g[1],g2);\n        while(n <= km) {\n          g[n] = nbi();\n          z.mulTo(g2,g[n-2],g[n]);\n          n += 2;\n        }\n      }\n\n      var j = e.t-1, w, is1 = true, r2 = nbi(), t;\n      i = nbits(e[j])-1;\n      while(j >= 0) {\n        if(i >= k1) w = (e[j]>>(i-k1))&km;\n        else {\n          w = (e[j]&((1<<(i+1))-1))<<(k1-i);\n          if(j > 0) w |= e[j-1]>>(this.DB+i-k1);\n        }\n\n        n = k;\n        while((w&1) == 0) { w >>= 1; --n; }\n        if((i -= n) < 0) { i += this.DB; --j; }\n        if(is1) {\t// ret == 1, don't bother squaring or multiplying it\n          g[w].copyTo(r);\n          is1 = false;\n        }\n        else {\n          while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\n          if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\n          z.mulTo(r2,g[w],r);\n        }\n\n        while(j >= 0 && (e[j]&(1<<i)) == 0) {\n          z.sqrTo(r,r2); t = r; r = r2; r2 = t;\n          if(--i < 0) { i = this.DB-1; --j; }\n        }\n      }\n      return z.revert(r);\n    }\n\n    // (public) gcd(this,a) (HAC 14.54)\n    function bnGCD(a) {\n      var x = (this.s<0)?this.negate():this.clone();\n      var y = (a.s<0)?a.negate():a.clone();\n      if(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\n      var i = x.getLowestSetBit(), g = y.getLowestSetBit();\n      if(g < 0) return x;\n      if(i < g) g = i;\n      if(g > 0) {\n        x.rShiftTo(g,x);\n        y.rShiftTo(g,y);\n      }\n      while(x.signum() > 0) {\n        if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\n        if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\n        if(x.compareTo(y) >= 0) {\n          x.subTo(y,x);\n          x.rShiftTo(1,x);\n        }\n        else {\n          y.subTo(x,y);\n          y.rShiftTo(1,y);\n        }\n      }\n      if(g > 0) y.lShiftTo(g,y);\n      return y;\n    }\n\n    // (protected) this % n, n < 2^26\n    function bnpModInt(n) {\n      if(n <= 0) return 0;\n      var d = this.DV%n, r = (this.s<0)?n-1:0;\n      if(this.t > 0)\n        if(d == 0) r = this[0]%n;\n        else for(var i = this.t-1; i >= 0; --i) r = (d*r+this[i])%n;\n      return r;\n    }\n\n    // (public) 1/this % m (HAC 14.61)\n    function bnModInverse(m) {\n      var ac = m.isEven();\n      if((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\n      var u = m.clone(), v = this.clone();\n      var a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\n      while(u.signum() != 0) {\n        while(u.isEven()) {\n          u.rShiftTo(1,u);\n          if(ac) {\n            if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\n            a.rShiftTo(1,a);\n          }\n          else if(!b.isEven()) b.subTo(m,b);\n          b.rShiftTo(1,b);\n        }\n        while(v.isEven()) {\n          v.rShiftTo(1,v);\n          if(ac) {\n            if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\n            c.rShiftTo(1,c);\n          }\n          else if(!d.isEven()) d.subTo(m,d);\n          d.rShiftTo(1,d);\n        }\n        if(u.compareTo(v) >= 0) {\n          u.subTo(v,u);\n          if(ac) a.subTo(c,a);\n          b.subTo(d,b);\n        }\n        else {\n          v.subTo(u,v);\n          if(ac) c.subTo(a,c);\n          d.subTo(b,d);\n        }\n      }\n      if(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\n      if(d.compareTo(m) >= 0) return d.subtract(m);\n      if(d.signum() < 0) d.addTo(m,d); else return d;\n      if(d.signum() < 0) return d.add(m); else return d;\n    }\n\n    var lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997];\n    var lplim = (1<<26)/lowprimes[lowprimes.length-1];\n\n    // (public) test primality with certainty >= 1-.5^t\n    function bnIsProbablePrime(t) {\n      var i, x = this.abs();\n      if(x.t == 1 && x[0] <= lowprimes[lowprimes.length-1]) {\n        for(i = 0; i < lowprimes.length; ++i)\n          if(x[0] == lowprimes[i]) return true;\n        return false;\n      }\n      if(x.isEven()) return false;\n      i = 1;\n      while(i < lowprimes.length) {\n        var m = lowprimes[i], j = i+1;\n        while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n        m = x.modInt(m);\n        while(i < j) if(m%lowprimes[i++] == 0) return false;\n      }\n      return x.millerRabin(t);\n    }\n\n    // (protected) true if probably prime (HAC 4.24, Miller-Rabin)\n    function bnpMillerRabin(t) {\n      var n1 = this.subtract(BigInteger.ONE);\n      var k = n1.getLowestSetBit();\n      if(k <= 0) return false;\n      var r = n1.shiftRight(k);\n      t = (t+1)>>1;\n      if(t > lowprimes.length) t = lowprimes.length;\n      var a = nbi();\n      for(var i = 0; i < t; ++i) {\n        //Pick bases at random, instead of starting at 2\n        a.fromInt(lowprimes[Math.floor(Math.random()*lowprimes.length)]);\n        var y = a.modPow(r,this);\n        if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n          var j = 1;\n          while(j++ < k && y.compareTo(n1) != 0) {\n            y = y.modPowInt(2,this);\n            if(y.compareTo(BigInteger.ONE) == 0) return false;\n          }\n          if(y.compareTo(n1) != 0) return false;\n        }\n      }\n      return true;\n    }\n\n    // protected\n    BigInteger.prototype.chunkSize = bnpChunkSize;\n    BigInteger.prototype.toRadix = bnpToRadix;\n    BigInteger.prototype.fromRadix = bnpFromRadix;\n    BigInteger.prototype.fromNumber = bnpFromNumber;\n    BigInteger.prototype.bitwiseTo = bnpBitwiseTo;\n    BigInteger.prototype.changeBit = bnpChangeBit;\n    BigInteger.prototype.addTo = bnpAddTo;\n    BigInteger.prototype.dMultiply = bnpDMultiply;\n    BigInteger.prototype.dAddOffset = bnpDAddOffset;\n    BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\n    BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\n    BigInteger.prototype.modInt = bnpModInt;\n    BigInteger.prototype.millerRabin = bnpMillerRabin;\n\n    // public\n    BigInteger.prototype.clone = bnClone;\n    BigInteger.prototype.intValue = bnIntValue;\n    BigInteger.prototype.byteValue = bnByteValue;\n    BigInteger.prototype.shortValue = bnShortValue;\n    BigInteger.prototype.signum = bnSigNum;\n    BigInteger.prototype.toByteArray = bnToByteArray;\n    BigInteger.prototype.equals = bnEquals;\n    BigInteger.prototype.min = bnMin;\n    BigInteger.prototype.max = bnMax;\n    BigInteger.prototype.and = bnAnd;\n    BigInteger.prototype.or = bnOr;\n    BigInteger.prototype.xor = bnXor;\n    BigInteger.prototype.andNot = bnAndNot;\n    BigInteger.prototype.not = bnNot;\n    BigInteger.prototype.shiftLeft = bnShiftLeft;\n    BigInteger.prototype.shiftRight = bnShiftRight;\n    BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\n    BigInteger.prototype.bitCount = bnBitCount;\n    BigInteger.prototype.testBit = bnTestBit;\n    BigInteger.prototype.setBit = bnSetBit;\n    BigInteger.prototype.clearBit = bnClearBit;\n    BigInteger.prototype.flipBit = bnFlipBit;\n    BigInteger.prototype.add = bnAdd;\n    BigInteger.prototype.subtract = bnSubtract;\n    BigInteger.prototype.multiply = bnMultiply;\n    BigInteger.prototype.divide = bnDivide;\n    BigInteger.prototype.remainder = bnRemainder;\n    BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\n    BigInteger.prototype.modPow = bnModPow;\n    BigInteger.prototype.modInverse = bnModInverse;\n    BigInteger.prototype.pow = bnPow;\n    BigInteger.prototype.gcd = bnGCD;\n    BigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n    // JSBN-specific extension\n    BigInteger.prototype.square = bnSquare;\n\n    // Expose the Barrett function\n    BigInteger.prototype.Barrett = Barrett\n\n    // BigInteger interfaces not implemented in jsbn:\n\n    // BigInteger(int signum, byte[] magnitude)\n    // double doubleValue()\n    // float floatValue()\n    // int hashCode()\n    // long longValue()\n    // static BigInteger valueOf(long val)\n\n\t// Random number generator - requires a PRNG backend, e.g. prng4.js\n\n\t// For best results, put code like\n\t// <body onClick='rng_seed_time();' onKeyPress='rng_seed_time();'>\n\t// in your main HTML document.\n\n\tvar rng_state;\n\tvar rng_pool;\n\tvar rng_pptr;\n\n\t// Mix in a 32-bit integer into the pool\n\tfunction rng_seed_int(x) {\n\t  rng_pool[rng_pptr++] ^= x & 255;\n\t  rng_pool[rng_pptr++] ^= (x >> 8) & 255;\n\t  rng_pool[rng_pptr++] ^= (x >> 16) & 255;\n\t  rng_pool[rng_pptr++] ^= (x >> 24) & 255;\n\t  if(rng_pptr >= rng_psize) rng_pptr -= rng_psize;\n\t}\n\n\t// Mix in the current time (w/milliseconds) into the pool\n\tfunction rng_seed_time() {\n\t  rng_seed_int(new Date().getTime());\n\t}\n\n\t// Initialize the pool with junk if needed.\n\tif(rng_pool == null) {\n\t  rng_pool = new Array();\n\t  rng_pptr = 0;\n\t  var t;\n\t  if(typeof window !== \"undefined\" && window.crypto) {\n\t\tif (window.crypto.getRandomValues) {\n\t\t  // Use webcrypto if available\n\t\t  var ua = new Uint8Array(32);\n\t\t  window.crypto.getRandomValues(ua);\n\t\t  for(t = 0; t < 32; ++t)\n\t\t\trng_pool[rng_pptr++] = ua[t];\n\t\t}\n\t\telse if(navigator.appName == \"Netscape\" && navigator.appVersion < \"5\") {\n\t\t  // Extract entropy (256 bits) from NS4 RNG if available\n\t\t  var z = window.crypto.random(32);\n\t\t  for(t = 0; t < z.length; ++t)\n\t\t\trng_pool[rng_pptr++] = z.charCodeAt(t) & 255;\n\t\t}\n\t  }\n\t  while(rng_pptr < rng_psize) {  // extract some randomness from Math.random()\n\t\tt = Math.floor(65536 * Math.random());\n\t\trng_pool[rng_pptr++] = t >>> 8;\n\t\trng_pool[rng_pptr++] = t & 255;\n\t  }\n\t  rng_pptr = 0;\n\t  rng_seed_time();\n\t  //rng_seed_int(window.screenX);\n\t  //rng_seed_int(window.screenY);\n\t}\n\n\tfunction rng_get_byte() {\n\t  if(rng_state == null) {\n\t\trng_seed_time();\n\t\trng_state = prng_newstate();\n\t\trng_state.init(rng_pool);\n\t\tfor(rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr)\n\t\t  rng_pool[rng_pptr] = 0;\n\t\trng_pptr = 0;\n\t\t//rng_pool = null;\n\t  }\n\t  // TODO: allow reseeding after first request\n\t  return rng_state.next();\n\t}\n\n\tfunction rng_get_bytes(ba) {\n\t  var i;\n\t  for(i = 0; i < ba.length; ++i) ba[i] = rng_get_byte();\n\t}\n\n\tfunction SecureRandom() {}\n\n\tSecureRandom.prototype.nextBytes = rng_get_bytes;\n\n\t// prng4.js - uses Arcfour as a PRNG\n\n\tfunction Arcfour() {\n\t  this.i = 0;\n\t  this.j = 0;\n\t  this.S = new Array();\n\t}\n\n\t// Initialize arcfour context from key, an array of ints, each from [0..255]\n\tfunction ARC4init(key) {\n\t  var i, j, t;\n\t  for(i = 0; i < 256; ++i)\n\t\tthis.S[i] = i;\n\t  j = 0;\n\t  for(i = 0; i < 256; ++i) {\n\t\tj = (j + this.S[i] + key[i % key.length]) & 255;\n\t\tt = this.S[i];\n\t\tthis.S[i] = this.S[j];\n\t\tthis.S[j] = t;\n\t  }\n\t  this.i = 0;\n\t  this.j = 0;\n\t}\n\n\tfunction ARC4next() {\n\t  var t;\n\t  this.i = (this.i + 1) & 255;\n\t  this.j = (this.j + this.S[this.i]) & 255;\n\t  t = this.S[this.i];\n\t  this.S[this.i] = this.S[this.j];\n\t  this.S[this.j] = t;\n\t  return this.S[(t + this.S[this.i]) & 255];\n\t}\n\n\tArcfour.prototype.init = ARC4init;\n\tArcfour.prototype.next = ARC4next;\n\n\t// Plug in your RNG constructor here\n\tfunction prng_newstate() {\n\t  return new Arcfour();\n\t}\n\n\t// Pool size must be a multiple of 4 and greater than 32.\n\t// An array of bytes the size of the pool will be passed to init()\n\tvar rng_psize = 256;\n\n    if (typeof exports !== 'undefined') {\n        exports = module.exports = {\n\t\t\tBigInteger: BigInteger,\n\t\t\tSecureRandom: SecureRandom,\n\t\t};\n    } else {\n        this.BigInteger = BigInteger;\n        this.SecureRandom = SecureRandom;\n    }\n\n}).call(this);\n","/**\n * Common values used on serialization classes\n */\n\nexport const SHORT_BUFFER_LENGTH = 254;\nexport const isPrimitive = /^(int|long|double|int128|int256|string|bytes)$/i;\n","import TLObject from 'type/tl-object.js';\n\nexport default class Vector extends TLObject {\n    constructor(list = [], type = 'int') {\n        super();\n\n        this.list = list;\n        this.type = type;\n    }\n\n    getList() {\n        return this.list.slice();\n    }\n\n    toJSON() {\n        let list = this.list.map(item => {\n            if (item instanceof TLObject) {\n                return item.toJSON();\n            }\n\n            return item;\n        });\n\n        return { _: 'vector', type: this.type, list };\n    }\n}\n\nVector.prototype.__id = Vector.id = {\n    id: '15c4b51c',\n    type: 'vector',\n    baseType: 'Vector',\n    params: []\n};","import { Buffer } from 'buffer';\nimport { BigInteger } from 'jsbn';\nimport { SHORT_BUFFER_LENGTH, isPrimitive } from 'serialization/common.js';\nimport Vector from 'vector';\n\nconst VECTOR_ID = Vector.id.id;\n\nexport default class WriteContext {\n    /**\n     * @param {TL.TLObject} object\n     */\n    constructor(object, options = {}) {\n        this._object = object;\n        this._buffers = [];\n        this._options = options;\n    }\n\n    /**\n     * Serializes the TL Object given upon construction\n     */\n    serialize() {\n        let params = this._object.__id.params;\n\n        if (!this._options.isBare) {\n            let id = this._object.__id.id;\n            id = new Buffer(id, 'hex');\n            this.push(id);\n        }\n\n        params.forEach(param => {\n            let value = this._object[param.name];\n            let type = param.type;\n\n            if (param.isVector) {\n                this._writeVector(value);\n                return;\n            }\n\n            if (this._isPrimitive(type)) {\n                this._writePrimitive(type, value);\n                return;\n            }\n\n            // if (type === 'Object') {\n            //     this._writeBytes(value);\n            //     return;\n            // }\n\n            this._writeTypeObject(value, { isBare: param.isBare || type === 'Object' });\n        });\n\n        return this;\n    }\n\n    _writeVector(vector) {\n        let list = vector.getList();\n\n        let id = new Buffer(VECTOR_ID, 'hex');\n        let length = new Buffer(4);\n        length.writeUInt32LE(list.length);\n\n        this.push(id);\n        this.push(length);\n\n        let type = vector.type;\n        let isPrimitive = this._isPrimitive(type);\n\n        if (isPrimitive) {\n            list.forEach(item => this._writePrimitive(type, item));\n            return;\n        }\n\n        list.forEach(item => this._writeTypeObject(item, { isBare: true }));\n    }\n\n    /**\n     * Check whether a given object param is primitive or a TL object\n     * @private\n     * @return {boolean}\n     */\n    _isPrimitive(type) {\n        return isPrimitive.test(type);\n    }\n\n    /**\n     * Write a primitive value\n     * @param {string} type\n     * @param {*} value\n     */\n    _writePrimitive(type, value) {\n        let method = 'write' + type.charAt(0).toUpperCase() + type.slice(1);\n        return this[method](value);\n    }\n\n    /**\n     * Write a TL Object\n     * @param {TL.TLObject} object\n     */\n    _writeTypeObject(object, options = {}) {\n        if (!options.isBare) {\n            this.push(new Buffer(object.__id.id, 'hex'));\n        }\n\n        let context = new WriteContext(object);\n        let buffer = context.serialize().toBuffer();\n\n        this._writeBytes(buffer);\n    }\n\n    /**\n     * @param {Buffer} buffer\n     */\n    push(buffer) {\n        this._buffers.push(buffer);\n\n        return this;\n    }\n\n    /**\n     * Concatenate and return all buffers generated on serialization\n     * @return {Buffer}\n     */\n    toBuffer() {\n        return Buffer.concat(this._buffers);\n    }\n\n    /**\n     * @param {SerializationContext} context    Serialization context\n     * @param {number} number                   A valid integer\n     */\n    writeInt(number) {\n        var buffer = new Buffer(4);\n        buffer.writeUInt32LE(number, 0, true);\n        this.push(buffer);\n\n        return this;\n    }\n\n    /**\n     * @param {SerializationContext} context    Serialization context\n     * @param {number} number                   A valid double\n     */\n    writeDouble(number) {\n        var buffer = new Buffer(8);\n        buffer.writeDoubleLE(number, 0, true);\n        this.push(buffer);\n\n        return this;\n    }\n\n    /**\n     * @param {SerializationContext} context        Serialization context\n     * @param {BigInteger|String|Number} number     A long representation\n     */\n    writeLong(number) {\n        return this._writeBigInt(number, 8);\n    }\n\n    /**\n     * @param {SerializationContext} context        Serialization context\n     * @param {BigInteger|String|Number} number     A int128 representation\n     */\n    writeInt128(number) {\n        return this._writeBigInt(number, 16);\n    }\n\n    /**\n     * @param {SerializationContext} context        Serialization context\n     * @param {BigInteger|String|Number} number     A int256 representation\n     */\n    writeInt256(number) {\n        return this._writeBigInt(number, 32);\n    }\n\n    writeString(string) {\n        return this.writeBytes(string);\n    }\n\n    /**\n     * @param {SerializationContext} context        Serialization context\n     * @param {Buffer|string} bytes                 Either a string or a Buffer object\n     */\n    writeBytes(bytes = '') {\n        let length = bytes.length;\n        let isShortBuffer = length < SHORT_BUFFER_LENGTH;\n        let lengthBuffer, byteCount = 0;\n\n        if (isShortBuffer) {\n            lengthBuffer = new Buffer(1);\n            lengthBuffer.writeUInt8(length, 0);\n            byteCount = 1;\n        } else {\n            lengthBuffer = new Buffer([\n                254,\n                length & 0xff,\n                (length >> 8) & 0xff,\n                (length >> 16) & 0xff\n            ]);\n\n            byteCount = 4;\n        }\n\n        // buffer that defines the length of \"bytes\" buffer\n        this.push(lengthBuffer);\n\n        this._writeBytes(bytes);\n        byteCount += length;\n\n        let padding = byteCount % 4;\n        if (padding) {\n            padding = new Buffer(4 - padding);\n            padding.fill(0);\n            this.push(padding);\n        }\n\n        return this;\n    }\n\n    /**\n     * @param {SerializationContext} context                Serialization context\n     * @param {string|number|Buffer|BigInteger} number      Number to write\n     * @param {number} length                               Byte-length of number\n     */\n    _writeBigInt(number, length) {\n        if (typeof number === 'number') {\n            let buffer = this._getBufferFromNumber(number, length);\n            this.push(buffer);\n        } else\n\n        if (typeof number === 'string') {\n            let buffer = this._getBufferFromNumberString(number, length);\n            this.push(buffer);\n        }\n\n        // a BigInteger or Buffer\n        else {\n            this._writeBytes(number);\n        }\n\n        return this;\n    }\n\n    /**\n     * @param {SerializationContext} context        Serialization context\n     * @param {Buffer|String} bytes                 Either a string or a Buffer object\n     */\n    _writeBytes(bytes) {\n        var buffer = !Buffer.isBuffer(bytes) ? new Buffer(bytes) : bytes;\n        this.push(buffer);\n\n        return this;\n    }\n\n    /**\n     * @param {number} number       Number as a integer/float\n     * @param {number} length       Number byte-length\n     */\n    _getBufferFromNumber(number, length) {\n        let buffer = new Buffer(length);\n\n        buffer.fill(0);\n        buffer.writeUInt32LE(number, 0);\n\n        return buffer;\n    }\n\n    /**\n     * @param {String} number       Number in decimals, written as string\n     * @param {number} length       Number byte-length\n     */\n    _getBufferFromNumberString(number, length) {\n        if (number.startsWith('0x')) {\n            number = number.slice(2);\n            return this._getBufferFromBigIntHex(number, length);\n        }\n\n        return this._getBufferFromBigInt(new BigInteger(number), length);\n    }\n\n    /**\n     * @param {String} number       Number as a hexadecimal string\n     * @param {number} length       Number byte-length\n     */\n    _getBufferFromBigIntHex(number, length) {\n        let bytes = [];\n        let byteLength = length * 2;\n\n        if (number.length > byteLength) {\n            number = number.slice(number.length - byteLength);\n        }\n\n        // left padding with zeros to align byte size\n        if (number.length < byteLength) {\n            number = '0'.repeat(byteLength - number.length) + number;\n        }\n\n        let i = byteLength;\n        while(i >= 0) {\n            bytes.push(new Buffer(number.slice(i - 2, i), 'hex'));\n            i -= 2;\n        }\n\n        return Buffer.concat(bytes, length);\n    }\n\n    /**\n     * @param {BigInteger} number\n     * @param {number} length\n     */\n    _getBufferFromBigInt(number, length) {\n        let byteArray = number.toByteArray();\n        let byteArrayLength = byteArray.length;\n\n        let buffer = new Buffer(length);\n        buffer.fill(0);\n\n        let i = 0, ii = Math.min(byteArrayLength, length);\n        byteArrayLength--;\n\n        // copy number by number to buffer from right to left\n        for (; i < ii; i++) {\n            let value = byteArray[byteArrayLength - i];\n            buffer[i] = value;\n        }\n\n        return buffer;\n    }\n}\n","import { Buffer } from 'buffer';\nimport TypeRegistry from 'type/type-registry.js';\nimport { BigInteger } from 'jsbn';\nimport { SHORT_BUFFER_LENGTH, isPrimitive } from 'serialization/common.js';\n\nconst ZERO_BUFFER = new Buffer(1).fill(0);\n\nexport default class ReadContext {\n    constructor(buffer, options = {}) {\n        if (!Buffer.isBuffer(buffer)) {\n            throw new Error('Invalid buffer to deserialize');\n        }\n\n        this._buffer = buffer;\n        this._cursor = 0;\n        this._object = null;\n        this._options = options;\n    }\n\n    getTypeObject() {\n        return this._object;\n    }\n\n    deserialize() {\n        let typeId = this._readTypeIdFromBuffer();\n        let Type = TypeRegistry.getById(typeId);\n\n        if (!Type) {\n            throw new Error('Type id not found: ' + typeId);\n        }\n\n        this.moveCursor(4);\n\n        this._object = new Type();\n        this.deserializeType(Type);\n\n        return this;\n    }\n\n    deserializeType(Type) {\n        let params = Type.id.params;\n\n        params.forEach(param => {\n            let value;\n            let type = param.type;\n\n            if (param.isVector) {\n                value = this.deserializeVector(type);\n            }\n\n            else if (this._isPrimitive(type)) {\n                value = this._readPrimitive(type);\n            }\n\n            else {\n                value = this._readTypeObject(type);\n            }\n\n            this._object[param.name] = value;\n        });\n    }\n\n    deserializeVector(type) {\n        // skip vector type id\n        this.moveCursor(4);\n\n        let length = this._buffer.readUInt32LE(this._cursor);\n        this.moveCursor(4);\n\n        let objects = [];\n        let isPrimitive = this._isPrimitive(type);\n\n        const read = () => isPrimitive ? this._readPrimitive(type) : this._readTypeObject(type);\n\n        for (let i = 0; i < length; i++) {\n            objects.push(read());\n        }\n\n        let Vector = TypeRegistry.getByType('vector');\n\n        return new Vector(objects, type);\n    }\n\n    _isPrimitive(type) {\n        return isPrimitive.test(type);\n    }\n\n    _readPrimitive(type) {\n        let method = 'read' + type.charAt(0).toUpperCase() + type.slice(1);\n        return this[method]();\n    }\n\n    _readTypeObject(type) {\n        let buffer = this.slice(this._buffer.length - this._cursor);\n\n        let context = new ReadContext(buffer, { isBare: type.charAt(0) === '%' });\n        context.deserialize();\n        this.moveCursor(context._cursor);\n\n        // TODO\n        // (typeName == 'BoolTrue') ? true : (typeName == 'BoolFalse') ? false : obj;\n        return context.getTypeObject();\n    }\n\n    readString() {\n        return this.readBytes().toString('utf8');\n    }\n\n    readBytes() {\n        let length = this.slice();\n        length = length.readUInt8(0);\n\n        // from short length and up, uses different reading\n        if (length === SHORT_BUFFER_LENGTH) {\n            this.moveCursor();\n            return this._readLongBytes();\n        }\n\n        this.moveCursor();\n        let bytes = this._readBytes(length);\n        this._checkPadding();\n\n        return bytes;\n    }\n\n    _readBytes(length) {\n        let bytes = this.slice(length);\n        this.moveCursor(length);\n\n        return bytes;\n    }\n\n    /**\n     * Read the length from first 3 bytes, then read bytes up to the found length\n     */\n    _readLongBytes() {\n        let lengthBytes = this.slice(3);\n        let length = Buffer.concat([lengthBytes, ZERO_BUFFER]);\n        length = length.readUInt32LE(0);\n\n        this.moveCursor(3);\n\n        let bytes = this.slice(length);\n        this.moveCursor(length);\n        this._checkPadding();\n\n        return bytes;\n    }\n\n    _checkPadding() {\n        let padding = this._cursor % 4;\n\n        if (padding > 0) {\n            this.moveCursor(4 - padding);\n        }\n    }\n\n    readInt() {\n        let int = this._buffer.readUInt32LE(this._cursor);\n        this.moveCursor(4);\n\n        return int;\n    }\n\n    readDouble() {\n        let int = this._buffer.readDoubleLE(this._cursor);\n        this.moveCursor(8);\n\n        return int;\n    }\n\n    readLong() {\n        return this._readBigInt(8);\n    }\n\n    readInt128() {\n        return this._readBigInt(16);\n    }\n\n    readInt256() {\n        return this._readBigInt(32);\n    }\n\n    _readBigInt(length) {\n        let bytes = this.slice(length);\n\n        this.moveCursor(length);\n        bytes = new BigInteger(bytes);\n\n        return bytes || null;\n    }\n\n    slice(length = 1) {\n        let end = this._cursor + length;\n        let max = this._buffer.length;\n\n        if (end > max) {\n            end = max;\n        }\n\n        return this._buffer.slice(this._cursor, end);\n    }\n\n    moveCursor(by = 1) {\n        this._cursor += by;\n    }\n\n    _readTypeIdFromBuffer() {\n        return this.slice(this._cursor + 4).toString('hex');\n    }\n}","import WriteContext from 'serialization/write-context.js';\nimport ReadContext from 'serialization/read-context.js';\n\nexport function deserialize (buffer) {\n    if (!Buffer.isBuffer(buffer)) {\n        throw new Error('Invalid buffer');\n    }\n\n    let context = new ReadContext(buffer);\n    context.deserialize();\n\n    return context.getTypeObject();\n}\n\nexport function serialize(object) {\n    let context = new WriteContext(object);\n    context.serialize();\n\n    return context.toBuffer();\n}\n","import { Buffer } from 'buffer';\n\nimport TLObject from 'type/tl-object.js';\nimport TypeRegistry from 'type/type-registry.js';\n\nimport WriteContext from 'serialization/write-context.js';\nimport ReadContext from 'serialization/read-context.js';\n\nimport Vector from 'vector.js';\n\nimport {serialize, deserialize} from 'helpers.js';\n\nif (typeof window !== 'undefined') {\n    window.Buffer = Buffer;\n}\n\nconst serialization = { WriteContext, ReadContext };\nconst types = TypeRegistry.types;\n\nTypeRegistry.addType(Vector);\n\nexport default {\n    TLObject,\n    TypeRegistry,\n    Vector,\n    WriteContext,\n    ReadContext,\n\n    types,\n    deserialize,\n    serialize\n};"],"names":["this","Buffer","TypeRegistry"],"mappings":"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"}